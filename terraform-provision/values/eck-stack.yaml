---
namespace:
  create: true
eck-elasticsearch:
  nodeSets:
  - name: default
    count: 1
    config:
      # Comment out when setting the vm.max_map_count via initContainer, as these are mutually exclusive.
      # For production workloads, it is strongly recommended to increase the kernel setting vm.max_map_count to 262144
      # and leave node.store.allow_mmap unset.
      # ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-virtual-memory.html
      #
      node.store.allow_mmap: false
    podTemplate:
      spec:
        tolerations:
        - key: deployment
          value: cost-optimized-spot-pool
          operator: Equal
          effect: NoSchedule

        containers:
        - name: elasticsearch
          resources:
            limits:
              memory: 2Gi
            requests:
              memory: 2Gi
eck-kibana:
  spec:
    podTemplate:
      spec:
        tolerations:
        - key: deployment
          value: cost-optimized-spot-pool
          operator: Equal
          effect: NoSchedule
  enabled: true
  count: 1
  elasticsearchRef:
    name: elasticsearch

eck-beats:
  enabled: true
  spec:
    type: filebeat
    elasticsearchRef:
      name: elasticsearch
    config:
      filebeat.inputs:
      - type: container
        paths:
        - /var/log/containers/*.log
      processors:
      - add_host_metadata: {}
      - add_cloud_metadata: {}
    daemonSet:
      podTemplate:
        spec:
          initContainers:
          - command:
            - sh
            - -c
            - chown -R 1000:1000 /usr/share/metricbeat/data
            image: docker.elastic.co/beats/metricbeat:7.17.25
            imagePullPolicy: IfNotPresent
            name: permissions
            securityContext:
              runAsUser: 0
            volumeMounts:
            - mountPath: /usr/share/metricbeat/data
              name: beat-data
          tolerations:
          - key: deployment
            value: "cost-optimized-spot-pool"
            operator: Equal
            effect: NoSchedule
          - effect: NoSchedule
            key: CriticalAddonsOnly
            value: "true"
            operator: Equal
        automountServiceAccountToken: true
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirstWithHostNet
        hostNetwork: true # Allows to provide richer host metadata
        containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
            # If using Red Hat OpenShift uncomment this:
            #privileged: true
          volumeMounts:
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
        volumes:
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers

# eck-logstash:
#   enabled: false
#   # This is required to be able to set the logstash
#   # output of beats in a consistent manner.
#   fullnameOverride: "logstash-ls-beats"
#   elasticsearchRefs:
#   # This clusterName is required to match the environment variables
#   # used in the below config.string output section.
#   - clusterName: eck
#     name: elasticsearch
#   pipelines:
#   - pipeline.id: main
#     config.string: |
#       input {
#         beats {
#           port => 5044
#         }
#       }
#       filter {
#         grok {
#           match => { "message" => "%{HTTPD_COMMONLOG}"}
#         }
#         geoip {
#           source => "[source][address]"
#           target => "[source]"
#         }
#       }
#       output {
#         elasticsearch {
#           hosts => [ "${ECK_ES_HOSTS}" ]
#           user => "${ECK_ES_USER}"
#           password => "${ECK_ES_PASSWORD}"
#           ssl_certificate_authorities => "${ECK_ES_SSL_CERTIFICATE_AUTHORITY}"
#         }
#       }
#   services:
#   - name: beats
#     service:
#       spec:
#         type: ClusterIP
#         ports:
#         - port: 5044
#           name: "filebeat"
#           protocol: TCP
#           targetPort: 5044

# tolerations:
# - key: deployment
#   value: cost-optimized-spot-pool
#   operator: equals
#   effect: NoSchedule
