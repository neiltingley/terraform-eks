# apiVersion: v1
# kind: Service
# metadata:
#   annotations:
#     alb.ingress.kubernetes.io/backend-protocol-version: HTTP2
#     #This tells AWS to send traffic from the ALB using HTTP2. Can use GRPC as well if you want to leverage GRPC specific features
#   labels:
#     app: argogrpc
#   name: argogrpc
#   namespace: default
# spec:
#   ports:
#   - name: "443"
#     port: 443
#     protocol: TCP
#     targetPort: 8080
#   selector:
#     app.kubernetes.io/name: argocd-server
#   sessionAffinity: None
#   type: NodePort
---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   annotations:
#     # load balancer priority, lower numbers are evaluated first
#     # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-update-rules.html#update-rule-priority
#     alb.ingress.kubernetes.io/group.order: "10"
#     alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30" # in seconds
#     alb.ingress.kubernetes.io/healthcheck-path: /
#     alb.ingress.kubernetes.io/healty-threshold-count: "1"
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     # by default, it will create a listener rule on port 80
#     # you can specify both ports as well like this: '[{"HTTP": 80}, {"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
#     alb.ingress.kubernetes.io/ssl-redirect: '443'
#     alb.ingress.kubernetes.io/target-type: "ip"
#     alb.ingress.kubernetes.io/conditions.argocd-server-grpc: |
#       [{"field":"http-header","httpHeaderConfig":{"httpHeaderName": "Content-Type", "values":["application/grpc"]}}]

#   name: argo
# spec:

#   ingressClassName: alb
#   rules:
#   - host: argo.tools.devopsworks.io
#     http:
#       paths:
#       - path: /
#         backend:
#           service:
#             name: argogrpc
#             port:
#               number: 443
#         pathType: Prefix
#       - path: /
#         pathType: ImplementationSpecific
#         backend:
#           service:
#             name: argo-argocd-server
#             port:
#               number: 80
