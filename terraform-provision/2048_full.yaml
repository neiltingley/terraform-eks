---
apiVersion: v1
kind: Namespace
metadata:
  name: game-2048
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: game-2048
  name: deployment-2048
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: app-2048
  replicas: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app-2048
    spec:
      containers:
      - image: public.ecr.aws/l6m2t8p7/docker-2048:latest
        imagePullPolicy: Always
        name: app-2048
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  namespace: game-2048
  name: service-2048
spec:
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  type: NodePort
  selector:
    app.kubernetes.io/name: app-2048
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # load balancer priority, lower numbers are evaluated first
    # https://docs.aws.amazon.com/elasticloadbalancing/latest/application/listener-update-rules.html#update-rule-priority
    alb.ingress.kubernetes.io/group.order: "10"
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: "30" # in seconds
    alb.ingress.kubernetes.io/healthcheck-path: /healhtz
    alb.ingress.kubernetes.io/healty-threshold-count: "1"
    # by default, it will create a listener rule on port 80
    # you can specify both ports as well like this: '[{"HTTP": 80}, {"HTTPS": 443}]'
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS": 443}]'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: "3"
  name: nginx
spec:
  # if you have the `ingressclass.kubernetes.io/is-default-class=true`
  # annotation on the ingress class, you don't need this
  # ingressClassName: aws-alb
  rules:
    - host: nginx.example.com
      http:
        paths:
          - backend:
              service:
                name: nginx
                port:
                  number: 80
            path: /
            pathType: Prefix
